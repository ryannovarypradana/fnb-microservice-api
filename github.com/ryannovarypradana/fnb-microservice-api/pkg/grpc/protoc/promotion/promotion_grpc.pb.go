// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.12
// source: proto/promotion/promotion.proto

package promotion

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PromotionServiceClient is the client API for PromotionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PromotionServiceClient interface {
	// Discount RPCs
	CreateDiscount(ctx context.Context, in *CreateDiscountRequest, opts ...grpc.CallOption) (*Discount, error)
	GetDiscount(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*Discount, error)
	UpdateDiscount(ctx context.Context, in *UpdateDiscountRequest, opts ...grpc.CallOption) (*Discount, error)
	DeleteDiscount(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	ListDiscounts(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListDiscountsResponse, error)
	// Voucher RPCs
	CreateVoucher(ctx context.Context, in *CreateVoucherRequest, opts ...grpc.CallOption) (*Voucher, error)
	GetVoucher(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*Voucher, error)
	UpdateVoucher(ctx context.Context, in *UpdateVoucherRequest, opts ...grpc.CallOption) (*Voucher, error)
	DeleteVoucher(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	ListVouchers(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListVouchersResponse, error)
	// Bundle RPCs
	CreateBundle(ctx context.Context, in *CreateBundleRequest, opts ...grpc.CallOption) (*Bundle, error)
	GetBundle(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*Bundle, error)
	UpdateBundle(ctx context.Context, in *UpdateBundleRequest, opts ...grpc.CallOption) (*Bundle, error)
	DeleteBundle(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	ListBundles(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListBundlesResponse, error)
}

type promotionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPromotionServiceClient(cc grpc.ClientConnInterface) PromotionServiceClient {
	return &promotionServiceClient{cc}
}

func (c *promotionServiceClient) CreateDiscount(ctx context.Context, in *CreateDiscountRequest, opts ...grpc.CallOption) (*Discount, error) {
	out := new(Discount)
	err := c.cc.Invoke(ctx, "/promotion.PromotionService/CreateDiscount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) GetDiscount(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*Discount, error) {
	out := new(Discount)
	err := c.cc.Invoke(ctx, "/promotion.PromotionService/GetDiscount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) UpdateDiscount(ctx context.Context, in *UpdateDiscountRequest, opts ...grpc.CallOption) (*Discount, error) {
	out := new(Discount)
	err := c.cc.Invoke(ctx, "/promotion.PromotionService/UpdateDiscount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) DeleteDiscount(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/promotion.PromotionService/DeleteDiscount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) ListDiscounts(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListDiscountsResponse, error) {
	out := new(ListDiscountsResponse)
	err := c.cc.Invoke(ctx, "/promotion.PromotionService/ListDiscounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) CreateVoucher(ctx context.Context, in *CreateVoucherRequest, opts ...grpc.CallOption) (*Voucher, error) {
	out := new(Voucher)
	err := c.cc.Invoke(ctx, "/promotion.PromotionService/CreateVoucher", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) GetVoucher(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*Voucher, error) {
	out := new(Voucher)
	err := c.cc.Invoke(ctx, "/promotion.PromotionService/GetVoucher", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) UpdateVoucher(ctx context.Context, in *UpdateVoucherRequest, opts ...grpc.CallOption) (*Voucher, error) {
	out := new(Voucher)
	err := c.cc.Invoke(ctx, "/promotion.PromotionService/UpdateVoucher", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) DeleteVoucher(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/promotion.PromotionService/DeleteVoucher", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) ListVouchers(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListVouchersResponse, error) {
	out := new(ListVouchersResponse)
	err := c.cc.Invoke(ctx, "/promotion.PromotionService/ListVouchers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) CreateBundle(ctx context.Context, in *CreateBundleRequest, opts ...grpc.CallOption) (*Bundle, error) {
	out := new(Bundle)
	err := c.cc.Invoke(ctx, "/promotion.PromotionService/CreateBundle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) GetBundle(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*Bundle, error) {
	out := new(Bundle)
	err := c.cc.Invoke(ctx, "/promotion.PromotionService/GetBundle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) UpdateBundle(ctx context.Context, in *UpdateBundleRequest, opts ...grpc.CallOption) (*Bundle, error) {
	out := new(Bundle)
	err := c.cc.Invoke(ctx, "/promotion.PromotionService/UpdateBundle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) DeleteBundle(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/promotion.PromotionService/DeleteBundle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionServiceClient) ListBundles(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListBundlesResponse, error) {
	out := new(ListBundlesResponse)
	err := c.cc.Invoke(ctx, "/promotion.PromotionService/ListBundles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PromotionServiceServer is the server API for PromotionService service.
// All implementations must embed UnimplementedPromotionServiceServer
// for forward compatibility
type PromotionServiceServer interface {
	// Discount RPCs
	CreateDiscount(context.Context, *CreateDiscountRequest) (*Discount, error)
	GetDiscount(context.Context, *GetByIDRequest) (*Discount, error)
	UpdateDiscount(context.Context, *UpdateDiscountRequest) (*Discount, error)
	DeleteDiscount(context.Context, *GetByIDRequest) (*DeleteResponse, error)
	ListDiscounts(context.Context, *emptypb.Empty) (*ListDiscountsResponse, error)
	// Voucher RPCs
	CreateVoucher(context.Context, *CreateVoucherRequest) (*Voucher, error)
	GetVoucher(context.Context, *GetByIDRequest) (*Voucher, error)
	UpdateVoucher(context.Context, *UpdateVoucherRequest) (*Voucher, error)
	DeleteVoucher(context.Context, *GetByIDRequest) (*DeleteResponse, error)
	ListVouchers(context.Context, *emptypb.Empty) (*ListVouchersResponse, error)
	// Bundle RPCs
	CreateBundle(context.Context, *CreateBundleRequest) (*Bundle, error)
	GetBundle(context.Context, *GetByIDRequest) (*Bundle, error)
	UpdateBundle(context.Context, *UpdateBundleRequest) (*Bundle, error)
	DeleteBundle(context.Context, *GetByIDRequest) (*DeleteResponse, error)
	ListBundles(context.Context, *emptypb.Empty) (*ListBundlesResponse, error)
	mustEmbedUnimplementedPromotionServiceServer()
}

// UnimplementedPromotionServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPromotionServiceServer struct {
}

func (UnimplementedPromotionServiceServer) CreateDiscount(context.Context, *CreateDiscountRequest) (*Discount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDiscount not implemented")
}
func (UnimplementedPromotionServiceServer) GetDiscount(context.Context, *GetByIDRequest) (*Discount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscount not implemented")
}
func (UnimplementedPromotionServiceServer) UpdateDiscount(context.Context, *UpdateDiscountRequest) (*Discount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDiscount not implemented")
}
func (UnimplementedPromotionServiceServer) DeleteDiscount(context.Context, *GetByIDRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDiscount not implemented")
}
func (UnimplementedPromotionServiceServer) ListDiscounts(context.Context, *emptypb.Empty) (*ListDiscountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDiscounts not implemented")
}
func (UnimplementedPromotionServiceServer) CreateVoucher(context.Context, *CreateVoucherRequest) (*Voucher, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVoucher not implemented")
}
func (UnimplementedPromotionServiceServer) GetVoucher(context.Context, *GetByIDRequest) (*Voucher, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVoucher not implemented")
}
func (UnimplementedPromotionServiceServer) UpdateVoucher(context.Context, *UpdateVoucherRequest) (*Voucher, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVoucher not implemented")
}
func (UnimplementedPromotionServiceServer) DeleteVoucher(context.Context, *GetByIDRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVoucher not implemented")
}
func (UnimplementedPromotionServiceServer) ListVouchers(context.Context, *emptypb.Empty) (*ListVouchersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVouchers not implemented")
}
func (UnimplementedPromotionServiceServer) CreateBundle(context.Context, *CreateBundleRequest) (*Bundle, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBundle not implemented")
}
func (UnimplementedPromotionServiceServer) GetBundle(context.Context, *GetByIDRequest) (*Bundle, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBundle not implemented")
}
func (UnimplementedPromotionServiceServer) UpdateBundle(context.Context, *UpdateBundleRequest) (*Bundle, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBundle not implemented")
}
func (UnimplementedPromotionServiceServer) DeleteBundle(context.Context, *GetByIDRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBundle not implemented")
}
func (UnimplementedPromotionServiceServer) ListBundles(context.Context, *emptypb.Empty) (*ListBundlesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBundles not implemented")
}
func (UnimplementedPromotionServiceServer) mustEmbedUnimplementedPromotionServiceServer() {}

// UnsafePromotionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PromotionServiceServer will
// result in compilation errors.
type UnsafePromotionServiceServer interface {
	mustEmbedUnimplementedPromotionServiceServer()
}

func RegisterPromotionServiceServer(s grpc.ServiceRegistrar, srv PromotionServiceServer) {
	s.RegisterService(&PromotionService_ServiceDesc, srv)
}

func _PromotionService_CreateDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDiscountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).CreateDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/promotion.PromotionService/CreateDiscount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).CreateDiscount(ctx, req.(*CreateDiscountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_GetDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).GetDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/promotion.PromotionService/GetDiscount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).GetDiscount(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_UpdateDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDiscountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).UpdateDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/promotion.PromotionService/UpdateDiscount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).UpdateDiscount(ctx, req.(*UpdateDiscountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_DeleteDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).DeleteDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/promotion.PromotionService/DeleteDiscount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).DeleteDiscount(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_ListDiscounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).ListDiscounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/promotion.PromotionService/ListDiscounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).ListDiscounts(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_CreateVoucher_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVoucherRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).CreateVoucher(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/promotion.PromotionService/CreateVoucher",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).CreateVoucher(ctx, req.(*CreateVoucherRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_GetVoucher_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).GetVoucher(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/promotion.PromotionService/GetVoucher",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).GetVoucher(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_UpdateVoucher_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVoucherRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).UpdateVoucher(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/promotion.PromotionService/UpdateVoucher",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).UpdateVoucher(ctx, req.(*UpdateVoucherRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_DeleteVoucher_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).DeleteVoucher(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/promotion.PromotionService/DeleteVoucher",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).DeleteVoucher(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_ListVouchers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).ListVouchers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/promotion.PromotionService/ListVouchers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).ListVouchers(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_CreateBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).CreateBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/promotion.PromotionService/CreateBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).CreateBundle(ctx, req.(*CreateBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_GetBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).GetBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/promotion.PromotionService/GetBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).GetBundle(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_UpdateBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBundleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).UpdateBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/promotion.PromotionService/UpdateBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).UpdateBundle(ctx, req.(*UpdateBundleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_DeleteBundle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).DeleteBundle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/promotion.PromotionService/DeleteBundle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).DeleteBundle(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromotionService_ListBundles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromotionServiceServer).ListBundles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/promotion.PromotionService/ListBundles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromotionServiceServer).ListBundles(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// PromotionService_ServiceDesc is the grpc.ServiceDesc for PromotionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PromotionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "promotion.PromotionService",
	HandlerType: (*PromotionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDiscount",
			Handler:    _PromotionService_CreateDiscount_Handler,
		},
		{
			MethodName: "GetDiscount",
			Handler:    _PromotionService_GetDiscount_Handler,
		},
		{
			MethodName: "UpdateDiscount",
			Handler:    _PromotionService_UpdateDiscount_Handler,
		},
		{
			MethodName: "DeleteDiscount",
			Handler:    _PromotionService_DeleteDiscount_Handler,
		},
		{
			MethodName: "ListDiscounts",
			Handler:    _PromotionService_ListDiscounts_Handler,
		},
		{
			MethodName: "CreateVoucher",
			Handler:    _PromotionService_CreateVoucher_Handler,
		},
		{
			MethodName: "GetVoucher",
			Handler:    _PromotionService_GetVoucher_Handler,
		},
		{
			MethodName: "UpdateVoucher",
			Handler:    _PromotionService_UpdateVoucher_Handler,
		},
		{
			MethodName: "DeleteVoucher",
			Handler:    _PromotionService_DeleteVoucher_Handler,
		},
		{
			MethodName: "ListVouchers",
			Handler:    _PromotionService_ListVouchers_Handler,
		},
		{
			MethodName: "CreateBundle",
			Handler:    _PromotionService_CreateBundle_Handler,
		},
		{
			MethodName: "GetBundle",
			Handler:    _PromotionService_GetBundle_Handler,
		},
		{
			MethodName: "UpdateBundle",
			Handler:    _PromotionService_UpdateBundle_Handler,
		},
		{
			MethodName: "DeleteBundle",
			Handler:    _PromotionService_DeleteBundle_Handler,
		},
		{
			MethodName: "ListBundles",
			Handler:    _PromotionService_ListBundles_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/promotion/promotion.proto",
}

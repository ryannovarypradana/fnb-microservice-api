syntax = "proto3";

package store;

option go_package = "./pkg/grpc/protoc/store";

// Pesan Company untuk disematkan di dalam Store
message Company {
    string id = 1;
    string name = 2;
    string code = 3;
    string created_at = 4;
    string updated_at = 5;
}

message Store {
    string id = 1;
    // company_id tidak lagi diperlukan karena kita akan menyematkan seluruh objek Company
    // string company_id = 2; 
    string name = 3;
    string address = 4;
    string code = 5;
    string banner_image_url = 6;
    float tax_percentage = 7;
    string operational_hours = 8; // Tetap sebagai string untuk fleksibilitas JSON
    double latitude = 9;
    double longitude = 10;
    Company company = 11; // Menyematkan pesan Company
    string created_at = 12; // Menambahkan createdAt
    string updated_at = 13; // Menambahkan updatedAt
}

message CreateStoreRequest {
    string company_id = 1;
    string name = 2;
    string address = 3;
}

message CreateStoreResponse {
    Store store = 1;
}

message GetStoreRequest {
    string id = 1;
}

message GetStoreResponse {
    Store store = 1;
}

message GetAllStoresRequest {
    string search = 1;
    optional string company_id = 2;
}

message GetAllStoresResponse {
    repeated Store stores = 1;
}

message GetStoreByCodeRequest {
    string store_code = 1;
}

message UpdateStoreRequest {
    string id = 1;
    optional string name = 2;
    optional string address = 3;
    optional string banner_image_url = 4;
    optional float tax_percentage = 5;
    optional string operational_hours = 6;
    optional double latitude = 7;
    optional double longitude = 8;
}

message DeleteStoreRequest {
    string id = 1;
}

message DeleteStoreResponse {
    string message = 1;
}

message CloneStoreContentRequest {
    string source_store_id = 1;
    string destination_store_id = 2;
}

message CloneStoreContentResponse {
    string message = 1;
}

service StoreService {
    rpc CreateStore(CreateStoreRequest) returns (CreateStoreResponse);
    rpc GetStore(GetStoreRequest) returns (GetStoreResponse);
    rpc GetAllStores(GetAllStoresRequest) returns (GetAllStoresResponse);
    rpc UpdateStore(UpdateStoreRequest) returns (GetStoreResponse);
    rpc DeleteStore(DeleteStoreRequest) returns (DeleteStoreResponse);
    rpc CloneStoreContent(CloneStoreContentRequest) returns (CloneStoreContentResponse);
    rpc GetStoreByCode(GetStoreByCodeRequest) returns (GetStoreResponse);
}
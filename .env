# APP GENERAL CONFIG
APP_ENV=development
APP_PORT=8080
APP_URL=http://localhost:8080
JWT_SECRET=f#Z&9p@d!K$r@sE!tGg5nJ2mP4v7y$B&E)H+MbQeThWmZq4t7w!z%C*F-JaNdRfU
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# DATABASE (POSTGRESQL)
DB_HOST=postgres
DB_PORT=5432
DB_USER=fnb_user
DB_PASSWORD=aymgor3ng
DB_NAME=fnb_db
DB_SSLMODE=disable

# CACHE (REDIS)
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=

# MESSAGE BROKER (RABBITMQ)
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672
RABBITMQ_USER=guest
RABBITMQ_PASSWORD=guest
RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/

# --- GRPC SERVICES PORT & ADDRESS ---
# Alamat ini digunakan oleh klien gRPC (API Gateway, dll.) untuk menemukan layanan di jaringan Docker.
# Nama host (misalnya, 'auth-service') harus sama dengan nama layanan di docker-compose.yml.

# API Gateway Port (HTTP)
API_GATEWAY_PORT=8080

# Auth Service (gRPC)
AUTH_SERVICE_PORT=50051
AUTH_SERVICE_ADDR=auth-service:50051

# User Service (gRPC)
USER_SERVICE_PORT=50052
USER_SERVICE_ADDR=user-service:50052

# Company Service (gRPC)
COMPANY_SERVICE_PORT=50053
COMPANY_SERVICE_ADDR=company-service:50053

# Store Service (gRPC)
STORE_SERVICE_PORT=50054
STORE_SERVICE_ADDR=store-service:50054

# Product Service (gRPC)
PRODUCT_SERVICE_PORT=50055
PRODUCT_SERVICE_ADDR=product-service:50055

# Order Service (gRPC)
ORDER_SERVICE_PORT=50056
ORDER_SERVICE_ADDR=order-service:50056

# Notification Service (Hanya RabbitMQ, tidak ada gRPC)
# Port tidak diperlukan karena tidak mengekspos server

# --- STORAGE (untuk upload file) ---
STORAGE_DRIVER=local
LOCAL_STORAGE_PATH=public/uploads